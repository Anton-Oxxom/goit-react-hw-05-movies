{"version":3,"file":"static/js/947.666aeac6.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCAC2CE,EAD3C,wBADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZC,EAAW,mCAAG,oGACFP,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXE,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADF,cACfG,EADe,yBAIdA,EAASC,KAAKM,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,2GC9BvB,EAA+B,8BAA/B,EAAoE,sBAApE,EAAiG,sBAAjG,EAAgI,wBAAhI,EAAkK,yBAAlK,EAAqM,yB,SCGxLO,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,+BACE,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,OACX,gBAAaN,UAAWC,EAAxB,WACE,eAAID,UAAWC,EAAf,SAA+BK,KAC/B,cAAGN,UAAWC,EAAd,SAA+BG,KAC/B,cAAGJ,UAAWC,EAAd,SAA+BI,MAHxBF,EADE,SAWtB,E,SCMD,EAnBoB,WAClB,IAAQT,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAA8Bc,EAAAA,EAAAA,UAAS,MAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAWH,GACRmB,MAAK,SAAAtB,GAAO,OAAIkB,EAAWlB,EAAf,IACZuB,OAAM,SAAAJ,GAAK,OAAIC,EAASD,EAAMK,QAAnB,GACf,GAAE,CAACrB,KAGF,iCACIK,IAAW,SAACiB,EAAA,EAAD,IACZjB,IAAW,SAACD,EAAD,CAASC,QAASA,IAC7BW,IAAS,4EAGf,C","sources":["API/fetchMovies.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","Pages/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30563e5cefb16328cd5df746a08d987e';\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"list_reviews\":\"Reviews_list_reviews__kqQSs\",\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"author\":\"Reviews_author__CqYAZ\",\"created\":\"Reviews_created__aQrrt\",\"content\":\"Reviews_content__13k0w\"};","import PropTypes from 'prop-types';\n\nimport styles from './Reviews.module.css';\n\nexport const Reviews = ({ reviews }) => {\n  return (\n    <>\n      <div className={styles.list_reviews}>\n        <ul className={styles.list}>\n          {reviews.map(({ id, created_at, content, author }) => (\n            <li key={id} className={styles.item}>\n              <h2 className={styles.author}>{author}</h2>\n              <p className={styles.created}>{created_at}</p>\n              <p className={styles.content}>{content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      created_at: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'API/fetchMovies';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { Loader } from 'components/Loader';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(results => setReviews(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews && <Loader />}\n      {reviews && <Reviews reviews={reviews} />}\n      {error && <p>Something went wrong, please try again later!g</p>}\n    </>\n  );\n};\nexport default ReviewsPage;"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","Reviews","reviews","className","styles","map","id","created_at","content","author","useParams","useState","setReviews","error","setError","useEffect","then","catch","message","Loader"],"sourceRoot":""}