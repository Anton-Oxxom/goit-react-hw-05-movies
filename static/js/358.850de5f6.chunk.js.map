{"version":3,"file":"static/js/358.850de5f6.chunk.js","mappings":"iTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCAC2CE,EAD3C,wBADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZC,EAAW,mCAAG,oGACFP,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXE,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADF,cACfG,EADe,yBAIdA,EAASC,KAAKM,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,2GC9BvB,EAA+B,2BAA/B,EAAiE,mBAAjE,EAA2F,mBAA3F,EAA2H,yBAA3H,EAAgK,wB,SCGnJO,EAAO,SAAC,GAAc,IAAZF,EAAW,EAAXA,KACrB,OACE,+BACE,gBAAKG,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAtB,OACR,gBAAaL,UAAWC,EAAxB,WACE,gBACEK,IACED,EAAY,0CAC2BA,GACnC,oHAENE,IAAKH,EACLJ,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAAiCG,MAV1BD,EADD,SAkBnB,E,SCAD,EApBiB,WACf,IAAQR,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAwBc,EAAAA,EAAAA,UAAS,MAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAQD,GACLmB,MAAK,SAAAtB,GAAO,OAAIkB,EAAQlB,EAAZ,IACZuB,OAAM,SAAAJ,GAAK,OAAIC,EAASD,EAAMK,QAAnB,GACf,GAAE,CAACrB,KAGF,iCACIE,IAAQ,SAACoB,EAAA,EAAD,IACTpB,IAAQ,SAACE,EAAD,CAAMF,KAAMA,IACpBc,IAAS,2EAGf,C","sources":["API/fetchMovies.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","Pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30563e5cefb16328cd5df746a08d987e';\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"list_section\":\"Cast_list_section__J4dKD\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"item_image\":\"Cast_item_image__llLv2\",\"item_name\":\"Cast_item_name__Fiq4A\"};","import PropTypes from 'prop-types';\n\nimport styles from './Cast.module.css';\n\nexport const Cast = ({ cast }) => {\n  return (\n    <>\n      <div className={styles.list_section}>\n        <ul className={styles.list}>\n          {cast.map(({ id, original_name, profile_path }) => (\n            <li key={id} className={styles.item}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n                }\n                alt={original_name}\n                className={styles.item_image}\n              />\n              <p className={styles.item_name}>{original_name}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'API/fetchMovies';\nimport { Cast } from 'components/Cast';\nimport { Loader } from 'components/Loader';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(results => setCast(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!cast && <Loader />}\n      {cast && <Cast cast={cast} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default CastPage;"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","Cast","className","styles","map","id","original_name","profile_path","src","alt","useParams","useState","setCast","error","setError","useEffect","then","catch","message","Loader"],"sourceRoot":""}